str="""readlimit	float
effectivereadlimit	float
logbias	charactor varying(50)
shareobjectstore	charactor varying(50)
nodestroy	charactor varying(50)
href	charactor varying(500)
casesensitivity	charactor varying(50)
utf8only	charactor varying(50)
compression	charactor varying(50)
sharetftp	charactor varying(50)
encryption	charactor varying(50)
copies	float
aclinherit	charactor varying(50)
compressratio	float
source	
space_total	numeric(12,0)
recordsize	numeric(12,0)
keychangedate	
space_available	numeric(12,0)
root_permissions	charactor varying(4)
space_unused_res	numeric(12,0)
maxblocksize	numeric(12,0)
rstchown	charactor varying(50)
shadow	charactor varying(50)
atime	charactor varying(50)
space_unused_res_shares	numeric(12,0)
name	charactor varying(50)
root_acl	charactor varying(200)
project	charactor varying(50)
normalization	charactor varying(50)
sharesftp	charactor varying(50)
reservation_snap	charactor varying(50)
effectivewritelimit	float
migration	charactor varying(50)
snapdir	charactor varying(50)
creation	charactor varying(50)
sharenfs	charactor varying(50)
sharesmb	charactor varying(50)
mountpoint	charactor varying(200)
space_data	numeric(12,0)
id	charactor varying(200)
quota_snap	charactor varying(50)
aclmode	charactor varying(50)
dedup	charactor varying(50)
snaplabel	charactor varying(50)
shareftp	charactor varying(50)
readonly	charactor varying(50)
secondarycache	charactor varying(50)
root_user	charactor varying(50)
space_snapshots	numeric(12,0)
quota	numeric(12,0)
exported	charactor varying(50)
vscan	charactor varying(50)
reservation	numeric(12,0)
keystatus	charactor varying(50)
pool	charactor varying(50)
writelimit	numeric(12,0)
checksum	charactor varying(50)
canonical_name	charactor varying(200)
root_group	charactor varying(50)
sharedav	charactor varying(50)
nbmand	charactor varying(50)

"""
for line in str.splitlines():
    tmp= line.split()
    cnt= len(tmp)
    if cnt ==3:
        print "\"{}\" {} {} COLLATE pg_catalog.\"default\",".format(tmp[0],tmp[1],tmp[2])
    if cnt == 2:
        print "\"{}\" {},".format(tmp[0],tmp[1])
